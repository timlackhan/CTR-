init_worker_by_lua '
        local update_handler
        update_handler = function()
		local v = {}
                local model_read = require "script/modelDT"
		local model_mgr = require "script/fmModel"
                model_read.load("/usr/local/openresty/lualib/script/attrs.txt")
		model_mgr.read_VMatrix("/usr/local/openresty/lualib/script/fm_vMatrix314",v)		

                local ok,err=ngx.timer.at(10.update_handler)
                if not ok then
                        ngx.log(ngx.ERR,"failed to create timer:",err)
                end
        end

        local ok,err = ngx.timer.at(0,update_handler)
        if not ok then
                ngx.log(ngx.ERR,"failed to create timer:",err)
        end
';

server{
        listen 80;
        server_name 192.168.152.128;
        access_log /tmp/ctr_access.log;
        error_log /tmp/ctr_error.log;

        default_type application/json;
        charset utf-8;

        location = /get/ctr {

                content_by_lua '
                        local model_mgr = require "script/fmModel"
			local model_read = require "script/modelDT"
                        local cjson = require "cjson"
                        local decode = cjson.decode
                        local transformer = require "script/transformerDT"

                        ngx.req.read_body()

                        local body = ngx.req.get_body_data()
                        local args 
                        local features_for_predict = {}
                        local ctr
                        local model_attrs = {}
			local length
			local v = {}
                        local row = 0
                        local col = 0
			local prob = 0

                        ngx.say(body)		

                        local ok,req = pcall(decode,body)
                        if not ok then
                               ngx.exit(400)
                        end
                        args = req
                        model_attrs, length = model_read.load(features_for_predict,"/usr/local/openresty/lualib/script/attrs.txt")
			
			for _, func in pairs(transformer) do
	           		func(features_for_predict, args, model_attrs)
	    		end
			
                        v,row,col = model_mgr.read_VMatrix("/usr/local/openresty/lualib/script/fm_vMatrix314",v)
              			
                        prob = model_mgr.predict(features_for_predict,v,col)
                        ngx.say(prob)
                ';
        }
}


